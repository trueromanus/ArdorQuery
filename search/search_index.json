{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ArdorQuery Cross-platform desktop is a tool for making HTTP(S) requests from websites or RESTful APIs. Similar to cURL, but with a graphical interface. Can be used for testing and/or developing web applications. Application have minimal user interface and keyboard oriented. The HTTP request is broken down into a human-readable set of lines. Each line describes the type at the beginning, for example url means we define the URL for the HTTP request. Each type of line has a different color to help visually identify that content. Install Installation instructions for your operating system at this link . Getting started Getting started and Basic shortcuts Basic Fields Available query options Write a scripts Feedback If you find a bug or have suggestions for the application, feel free to post an issue or discussion in the repository .","title":"Home"},{"location":"#ardorquery","text":"Cross-platform desktop is a tool for making HTTP(S) requests from websites or RESTful APIs. Similar to cURL, but with a graphical interface. Can be used for testing and/or developing web applications. Application have minimal user interface and keyboard oriented. The HTTP request is broken down into a human-readable set of lines. Each line describes the type at the beginning, for example url means we define the URL for the HTTP request. Each type of line has a different color to help visually identify that content.","title":"ArdorQuery"},{"location":"#install","text":"Installation instructions for your operating system at this link .","title":"Install"},{"location":"#getting-started","text":"Getting started and Basic shortcuts Basic Fields Available query options Write a scripts","title":"Getting started"},{"location":"#feedback","text":"If you find a bug or have suggestions for the application, feel free to post an issue or discussion in the repository .","title":"Feedback"},{"location":"basicshortcuts/","text":"Getting started and Basic shortcuts Any HTTP request in an application is represented as a set of lines, each line contains some field. Each field contains a separate part of the HTTP request, such as a URL address, method, header, parameter, etc. There can be only one selected field, and it is highlighted with a colored frame. Simple steps to get started with the application Once application is launched, enter url https://github.com/ in the one existing field. You need to add a new field by pressing Ctrl-Enter ( Cmd-Enter on macOS). Enter in the new field - method GET To make an HTTP request, press Ctrl-Z or F5 . For change tab on Result need press F11 . After the HTTP request completes, you can see the Status , Response Time and Response Size , headers and body of the response if it was received from the server. Most used shortcuts: List of keyboard shortcuts F1 or Ctrl-H - If you forgot a shortcut, you can check it at any time in the popup-help. It contains search by name or keyboard shortcut. Manage fields Ctrl-Enter - Adding a new empty field below the selected field. Alt-Enter - Adding a new empty field on top of the selected field. Shift-Enter - Adding a new empty field at the end of the fields. Tabs management F11 - Switching between tabs for HTTP request fields and Result . Executing the request Ctrl-Z or F5 - Run HTTP request Ctrl-B or F4 - Cancel an HTTP request if it is not completed You can check the full documentation about all fields at this link","title":"Getting started"},{"location":"basicshortcuts/#getting-started-and-basic-shortcuts","text":"Any HTTP request in an application is represented as a set of lines, each line contains some field. Each field contains a separate part of the HTTP request, such as a URL address, method, header, parameter, etc. There can be only one selected field, and it is highlighted with a colored frame.","title":"Getting started and Basic shortcuts"},{"location":"basicshortcuts/#simple-steps-to-get-started-with-the-application","text":"Once application is launched, enter url https://github.com/ in the one existing field. You need to add a new field by pressing Ctrl-Enter ( Cmd-Enter on macOS). Enter in the new field - method GET To make an HTTP request, press Ctrl-Z or F5 . For change tab on Result need press F11 . After the HTTP request completes, you can see the Status , Response Time and Response Size , headers and body of the response if it was received from the server. Most used shortcuts:","title":"Simple steps to get started with the application"},{"location":"basicshortcuts/#list-of-keyboard-shortcuts","text":"F1 or Ctrl-H - If you forgot a shortcut, you can check it at any time in the popup-help. It contains search by name or keyboard shortcut.","title":"List of keyboard shortcuts"},{"location":"basicshortcuts/#manage-fields","text":"Ctrl-Enter - Adding a new empty field below the selected field. Alt-Enter - Adding a new empty field on top of the selected field. Shift-Enter - Adding a new empty field at the end of the fields.","title":"Manage fields"},{"location":"basicshortcuts/#tabs-management","text":"F11 - Switching between tabs for HTTP request fields and Result .","title":"Tabs management"},{"location":"basicshortcuts/#executing-the-request","text":"Ctrl-Z or F5 - Run HTTP request Ctrl-B or F4 - Cancel an HTTP request if it is not completed You can check the full documentation about all fields at this link","title":"Executing the request"},{"location":"commonfields/","text":"Fields Fields marked [single] must only be specified once in the request. If you specify them several times, the value will be taken from the last line in order. Basic fields url X [single] Specifies URL for the HTTP request, where X it full URL. Example: url https://github.com method X [single] Specifies the HTTP request method. Where X can be one of the possible values: GET , POST , PUT , DELETE , PATCH . Example: method POST body X [single] Specify the content in the body for the HTTP request. Example: body {\"jsonField\": \"jsonValue\" } Form fields form X=Y Add form field where X it name of field and Y it value. Example: form count=100 file X=Y Add file field where X it name of file field and Y it full path for file in filesystem. Example: file poster=~/images/poster.jpg Header fields <header name> <value> Add header field for one of standart headers, where header name it name of standart header and value it header value. You can see full list of standard headers on this page . Example: Content-Type application/json X-<header name> <value> Add header field for non standart headers, where header name it name of header and value it header value. For a while there was a format for custom headers like X-<Header Name> . Example: X-USERID 550 header <header name> <value> Add header field for non standart headers, where header name it name of header and value it header value. Example: header USERID 550 pastry <cookie name>=<value> Adding parameter to Cookie header, where cookie name it name of header and value it value. Example: header USERID 550 protocol <value> By default, all HTTPS requests will attempt to use the HTTP/2 protocol. If this is undesirable behavior, you can force requests to run over HTTP/1.1 defining this field. Example: protocol 1.1 URL improve fields param <parameter name>=<value> Adding a URL parameter, where parameter name is the name of the parameter and value is its value. For ease of readability, it may be helpful if the URL itself and its parameters are separated. For example, I have a full URL http://test.com?id=20 . We can split it in the application into two lines: the first url http://test.com and the second param id=20 . Example: param userId=1 route <route name>=<value> Adding a URL parameter, where route name is the name of the parameter and value is its value. The modern way is to add URL parameters as part of the route, like http://test.com/products/20/product , where 20 is actually an parameter like identifier. We can split it in the application into two lines: the first url http://test.com/products/{id}/product and the second route id=20 . The application supports placing the same segment in multiple places, for example http://test.com/products/{id}/product/{id} . Example: route segment=2 Scripting postscript <script> Adding a postscript, where script is a script written in JavaScript to process the request result. The script can be used to validate results using custom logic. You can read more about scripting on this page . Example: postscript result.hasErrors = response.statusCode != 200; Extra fields title <name> Adding title for query, where name is the name of the query. The title will appear in the request list and can be used as a human-readable description. Example: title Query for get all products options <option1>,<option2>,<option3> Adding options for performing query, where optionX is the name of the option. You can check the list of all options on this page . Example: options noautoredirect,weaksslcheck","title":"Basic fields"},{"location":"commonfields/#fields","text":"Fields marked [single] must only be specified once in the request. If you specify them several times, the value will be taken from the last line in order.","title":"Fields"},{"location":"commonfields/#basic-fields","text":"","title":"Basic fields"},{"location":"commonfields/#url-x-single","text":"Specifies URL for the HTTP request, where X it full URL. Example: url https://github.com","title":"url X [single]"},{"location":"commonfields/#method-x-single","text":"Specifies the HTTP request method. Where X can be one of the possible values: GET , POST , PUT , DELETE , PATCH . Example: method POST","title":"method X [single]"},{"location":"commonfields/#body-x-single","text":"Specify the content in the body for the HTTP request. Example: body {\"jsonField\": \"jsonValue\" }","title":"body X [single]"},{"location":"commonfields/#form-fields","text":"","title":"Form fields"},{"location":"commonfields/#form-xy","text":"Add form field where X it name of field and Y it value. Example: form count=100","title":"form X=Y"},{"location":"commonfields/#file-xy","text":"Add file field where X it name of file field and Y it full path for file in filesystem. Example: file poster=~/images/poster.jpg","title":"file X=Y"},{"location":"commonfields/#header-fields","text":"","title":"Header fields"},{"location":"commonfields/#header-name-value","text":"Add header field for one of standart headers, where header name it name of standart header and value it header value. You can see full list of standard headers on this page . Example: Content-Type application/json","title":"&lt;header name&gt; &lt;value&gt;"},{"location":"commonfields/#x-header-name-value","text":"Add header field for non standart headers, where header name it name of header and value it header value. For a while there was a format for custom headers like X-<Header Name> . Example: X-USERID 550","title":"X-&lt;header name&gt; &lt;value&gt;"},{"location":"commonfields/#header-header-name-value","text":"Add header field for non standart headers, where header name it name of header and value it header value. Example: header USERID 550","title":"header &lt;header name&gt; &lt;value&gt;"},{"location":"commonfields/#pastry-cookie-namevalue","text":"Adding parameter to Cookie header, where cookie name it name of header and value it value. Example: header USERID 550","title":"pastry &lt;cookie name&gt;=&lt;value&gt;"},{"location":"commonfields/#protocol-value","text":"By default, all HTTPS requests will attempt to use the HTTP/2 protocol. If this is undesirable behavior, you can force requests to run over HTTP/1.1 defining this field. Example: protocol 1.1","title":"protocol &lt;value&gt;"},{"location":"commonfields/#url-improve-fields","text":"","title":"URL improve fields"},{"location":"commonfields/#param-parameter-namevalue","text":"Adding a URL parameter, where parameter name is the name of the parameter and value is its value. For ease of readability, it may be helpful if the URL itself and its parameters are separated. For example, I have a full URL http://test.com?id=20 . We can split it in the application into two lines: the first url http://test.com and the second param id=20 . Example: param userId=1","title":"param &lt;parameter name&gt;=&lt;value&gt;"},{"location":"commonfields/#route-route-namevalue","text":"Adding a URL parameter, where route name is the name of the parameter and value is its value. The modern way is to add URL parameters as part of the route, like http://test.com/products/20/product , where 20 is actually an parameter like identifier. We can split it in the application into two lines: the first url http://test.com/products/{id}/product and the second route id=20 . The application supports placing the same segment in multiple places, for example http://test.com/products/{id}/product/{id} . Example: route segment=2","title":"route &lt;route name&gt;=&lt;value&gt;"},{"location":"commonfields/#scripting","text":"","title":"Scripting"},{"location":"commonfields/#postscript-script","text":"Adding a postscript, where script is a script written in JavaScript to process the request result. The script can be used to validate results using custom logic. You can read more about scripting on this page . Example: postscript result.hasErrors = response.statusCode != 200;","title":"postscript &lt;script&gt;"},{"location":"commonfields/#extra-fields","text":"","title":"Extra fields"},{"location":"commonfields/#title-name","text":"Adding title for query, where name is the name of the query. The title will appear in the request list and can be used as a human-readable description. Example: title Query for get all products","title":"title &lt;name&gt;"},{"location":"commonfields/#options-option1option2option3","text":"Adding options for performing query, where optionX is the name of the option. You can check the list of all options on this page . Example: options noautoredirect,weaksslcheck","title":"options &lt;option1&gt;,&lt;option2&gt;,&lt;option3&gt;"},{"location":"fieldaliases/","text":"Field aliases An alias combines multiple fields into a single field. bearer <token> Added authorization header with bearer type and value from token . Example: bearer ABCDEF -> Authorization Bearer ABCDEF json <content> where content it body content. This can be useful if you are making a request to a restful API. Example: json {\"result\": true} -> Content-Type application/json Accept application/json body {\"result\": true} xmla <content> where content it body content. This can be useful if you are making a request to a restful API. Example: xmla <xml></xml> -> Content-Type application/xml Accept application/xml body <xml></xml>","title":"Field aliases"},{"location":"fieldaliases/#field-aliases","text":"An alias combines multiple fields into a single field.","title":"Field aliases"},{"location":"fieldaliases/#bearer-token","text":"Added authorization header with bearer type and value from token . Example: bearer ABCDEF -> Authorization Bearer ABCDEF","title":"bearer &lt;token&gt;"},{"location":"fieldaliases/#json-content","text":"where content it body content. This can be useful if you are making a request to a restful API. Example: json {\"result\": true} -> Content-Type application/json Accept application/json body {\"result\": true}","title":"json &lt;content&gt;"},{"location":"fieldaliases/#xmla-content","text":"where content it body content. This can be useful if you are making a request to a restful API. Example: xmla <xml></xml> -> Content-Type application/xml Accept application/xml body <xml></xml>","title":"xmla &lt;content&gt;"},{"location":"globalvariables/","text":"Global variables You can define a global variable and use it in your queries. To open the Global Variables window, press Ctrl-F6 / Command-F6 . The format of a global variable is the same as in the <variable name> <value> query editor. You can press Ctrl-Enter to add a new line for create a new global variable. At the end of edit session you need to save the global variables by pressing Ctrl-S / Command-S . After this you can use the global variable in your queries like {{<name of variable>}} . As example if I have global variable mytoken 4354534534534534534 I can use it in Query Editor as example in header like with bearer like this: bearer {{mytoken}} header will be replaced on bearer 4354534534534534534 . Navigation PgDown - Select a text field below the currently selected field. PgUp - Select a text field above the currently selected field. Ctrl-PgDown - Selecting end a text field. Ctrl-PgUp - Selecting start a text field. Working with lines Alt-Enter - Adding a new empty line on top of the selected line. Shift-Enter - Adding a new empty line at the end of the lines. Control-R - Remove selected line. Shift-Alt-R - Remove all lines. Quickly insert global variables in the Query Editor You can insert global variables in the Query Editor. To do this, you can place the cursor where you want, insert a global variable and press Ctrl-0 . After this, a pop-up window opens with all global variables. You can select the desired variable by pressing Up or Down , and press Enter to insert the variable or Escape to cancel operation. Predefined global variables You can use predefined global variables to inject some stuff like date, time, etc. dateTimeNow It will be replaced to the current date according to local time in ISO 8601 format. Example: 2024-01-01T12:00:00 dateTimeUtcNow It will be replaced to the current date according to UTC in ISO 8601 format. Example: 2024-01-01T12:00:00 time24HoursNow It will be replaced to current local time in 24 hours format. Example: 18:00:00","title":"Global Variables"},{"location":"globalvariables/#global-variables","text":"You can define a global variable and use it in your queries. To open the Global Variables window, press Ctrl-F6 / Command-F6 . The format of a global variable is the same as in the <variable name> <value> query editor. You can press Ctrl-Enter to add a new line for create a new global variable. At the end of edit session you need to save the global variables by pressing Ctrl-S / Command-S . After this you can use the global variable in your queries like {{<name of variable>}} . As example if I have global variable mytoken 4354534534534534534 I can use it in Query Editor as example in header like with bearer like this: bearer {{mytoken}} header will be replaced on bearer 4354534534534534534 .","title":"Global variables"},{"location":"globalvariables/#navigation","text":"PgDown - Select a text field below the currently selected field. PgUp - Select a text field above the currently selected field. Ctrl-PgDown - Selecting end a text field. Ctrl-PgUp - Selecting start a text field.","title":"Navigation"},{"location":"globalvariables/#working-with-lines","text":"Alt-Enter - Adding a new empty line on top of the selected line. Shift-Enter - Adding a new empty line at the end of the lines. Control-R - Remove selected line. Shift-Alt-R - Remove all lines.","title":"Working with lines"},{"location":"globalvariables/#quickly-insert-global-variables-in-the-query-editor","text":"You can insert global variables in the Query Editor. To do this, you can place the cursor where you want, insert a global variable and press Ctrl-0 . After this, a pop-up window opens with all global variables. You can select the desired variable by pressing Up or Down , and press Enter to insert the variable or Escape to cancel operation.","title":"Quickly insert global variables in the Query Editor"},{"location":"globalvariables/#predefined-global-variables","text":"You can use predefined global variables to inject some stuff like date, time, etc.","title":"Predefined global variables"},{"location":"globalvariables/#datetimenow","text":"It will be replaced to the current date according to local time in ISO 8601 format. Example: 2024-01-01T12:00:00","title":"dateTimeNow"},{"location":"globalvariables/#datetimeutcnow","text":"It will be replaced to the current date according to UTC in ISO 8601 format. Example: 2024-01-01T12:00:00","title":"dateTimeUtcNow"},{"location":"globalvariables/#time24hoursnow","text":"It will be replaced to current local time in 24 hours format. Example: 18:00:00","title":"time24HoursNow"},{"location":"install/","text":"How to install application The application is cross-platform, which means that it can be installed on any desktop operating system - macOS, Linux, Windows. See instructions below for your OS. Linux Flatpak If you have integrated flathub in you distro (like Fedora) do you can just open Software Installer, search ArdorQuery and click on Install . If you don't have flatpak you need install it first, check you distro install steps. After you install it you need to make followed commands: sudo flatpak install flathub org.emptyflow.ArdorQuery Windows Winget Open console and write winget install EmptyFlow.ArdorQuery Archive Open latest release by link Download file ArdorQuery.msi and run it macOS Open latest release by link Download file ArdorQuery.dmg Run application Terminal and make follow commands: $ cd ~/Downloads/ $ xattr -d com.apple.quarantine ArdorQuery.dmg You don't need type full name of dmg file just type ardor and press Tab button. - Open Downloads folder in Finder and just double click on dmg file for mount ArdorQuery disk. - The mapped drive opens in Finder and you can launch ArdorQuery application.","title":"Install"},{"location":"install/#how-to-install-application","text":"The application is cross-platform, which means that it can be installed on any desktop operating system - macOS, Linux, Windows. See instructions below for your OS.","title":"How to install application"},{"location":"install/#linux","text":"","title":"Linux"},{"location":"install/#flatpak","text":"If you have integrated flathub in you distro (like Fedora) do you can just open Software Installer, search ArdorQuery and click on Install . If you don't have flatpak you need install it first, check you distro install steps. After you install it you need to make followed commands: sudo flatpak install flathub org.emptyflow.ArdorQuery","title":"Flatpak"},{"location":"install/#windows","text":"","title":"Windows"},{"location":"install/#winget","text":"Open console and write winget install EmptyFlow.ArdorQuery","title":"Winget"},{"location":"install/#archive","text":"Open latest release by link Download file ArdorQuery.msi and run it","title":"Archive"},{"location":"install/#macos","text":"Open latest release by link Download file ArdorQuery.dmg Run application Terminal and make follow commands: $ cd ~/Downloads/ $ xattr -d com.apple.quarantine ArdorQuery.dmg You don't need type full name of dmg file just type ardor and press Tab button. - Open Downloads folder in Finder and just double click on dmg file for mount ArdorQuery disk. - The mapped drive opens in Finder and you can launch ArdorQuery application.","title":"macOS"},{"location":"openapiimport/","text":"Import from OpenAPI If you use OpenAPI for your API you can import routes from schema. To open the Import from OpenAPI window, press F6 . Now supported only schemes v3+ schemas in JSON format. Download routes from schema To download a schema, you must at first fill in the Scheme URL field in the Importer tab. After it just press F5 or Ctrl-Z for start download. List of loaded routes will be showed in lower part of window. If you need to load the schema from a local file, you need adjust URL with protocol file:// ( file:/// on Windows) and add the file path after it (example file:///home/tester/schema.json ). Navigation in routes You can use the mouse to scroll the list, but you can also use the keys to navigate: PgUp - Select previous route. PgDown - Select next route. Import route to Query Editor After you download schema and select routes you can add selected route to Query Editor . First of all you need to fill the Base URL field, the content from this field will be placed in the url field as the base path. As an example, I have an API address https://myapi.com/api , I fill the Base URL field with it, and after that, if I select the /test route, it will be automatically merged with the base URL - address and the result will be https://myapi.com/api/test . Ctrl-Enter - Add the selected route to a new query. Shift-Enter - Replace current query on selected route. You can also click on the desired route with the left mouse button. Filter routes You can filter routes by route path, route description or method. For filtering just type something in field Filter . Field Filter support multi filter conditions just type word between space and each of word typed like this mean additional filter. Select authorization method It quite often API have two and more authorization options. If some route have two and more options you need select it manually in Security field. You can check in the schema what names it has. Saved Options If you work with the same API frequently, it may be useful to save field values rather than having to enter them each time. Add new profile After you fill fields Load and edit profile Saved Options Delete profile","title":"Import from OpenAPI"},{"location":"openapiimport/#import-from-openapi","text":"If you use OpenAPI for your API you can import routes from schema. To open the Import from OpenAPI window, press F6 . Now supported only schemes v3+ schemas in JSON format.","title":"Import from OpenAPI"},{"location":"openapiimport/#download-routes-from-schema","text":"To download a schema, you must at first fill in the Scheme URL field in the Importer tab. After it just press F5 or Ctrl-Z for start download. List of loaded routes will be showed in lower part of window. If you need to load the schema from a local file, you need adjust URL with protocol file:// ( file:/// on Windows) and add the file path after it (example file:///home/tester/schema.json ).","title":"Download routes from schema"},{"location":"openapiimport/#navigation-in-routes","text":"You can use the mouse to scroll the list, but you can also use the keys to navigate: PgUp - Select previous route. PgDown - Select next route.","title":"Navigation in routes"},{"location":"openapiimport/#import-route-to-query-editor","text":"After you download schema and select routes you can add selected route to Query Editor . First of all you need to fill the Base URL field, the content from this field will be placed in the url field as the base path. As an example, I have an API address https://myapi.com/api , I fill the Base URL field with it, and after that, if I select the /test route, it will be automatically merged with the base URL - address and the result will be https://myapi.com/api/test . Ctrl-Enter - Add the selected route to a new query. Shift-Enter - Replace current query on selected route. You can also click on the desired route with the left mouse button.","title":"Import route to Query Editor"},{"location":"openapiimport/#filter-routes","text":"You can filter routes by route path, route description or method. For filtering just type something in field Filter . Field Filter support multi filter conditions just type word between space and each of word typed like this mean additional filter.","title":"Filter routes"},{"location":"openapiimport/#select-authorization-method","text":"It quite often API have two and more authorization options. If some route have two and more options you need select it manually in Security field. You can check in the schema what names it has.","title":"Select authorization method"},{"location":"openapiimport/#saved-options","text":"If you work with the same API frequently, it may be useful to save field values rather than having to enter them each time.","title":"Saved Options"},{"location":"openapiimport/#add-new-profile","text":"After you fill fields","title":"Add new profile"},{"location":"openapiimport/#load-and-edit-profile","text":"Saved Options","title":"Load and edit profile"},{"location":"openapiimport/#delete-profile","text":"","title":"Delete profile"},{"location":"options/","text":"Options Options are written as a set of words separated by a comma (option 1, option 2). Example: options noautoredirect,noweaksslcheck . Change redirect behaviour Default behaviour is auto redirect if server responsed any from 30x HTTP codes. noautoredirect - If the endpoint tries to redirect, this will not happen. In response, you will see information about the redirect. autoredirect - If the endpoint tries to redirect, this will happen without any limitation. The only exception is a redirect between https to http which is not allowed. autoredirectsameorigin - If the endpoint tries to redirect, this will happen only if it happened on same host, port and protocol. Check SSL Certificate Default behaviour is strong SSL check. weaksslcheck - The request a certificate from the peer will be happened, but does not require this certificate to be valid. noweaksslcheck - No SSL certificate verification. This can be useful if you are testing a web server using a developer/local certificate on local machine.","title":"Options"},{"location":"options/#options","text":"Options are written as a set of words separated by a comma (option 1, option 2). Example: options noautoredirect,noweaksslcheck .","title":"Options"},{"location":"options/#change-redirect-behaviour","text":"Default behaviour is auto redirect if server responsed any from 30x HTTP codes. noautoredirect - If the endpoint tries to redirect, this will not happen. In response, you will see information about the redirect. autoredirect - If the endpoint tries to redirect, this will happen without any limitation. The only exception is a redirect between https to http which is not allowed. autoredirectsameorigin - If the endpoint tries to redirect, this will happen only if it happened on same host, port and protocol.","title":"Change redirect behaviour"},{"location":"options/#check-ssl-certificate","text":"Default behaviour is strong SSL check. weaksslcheck - The request a certificate from the peer will be happened, but does not require this certificate to be valid. noweaksslcheck - No SSL certificate verification. This can be useful if you are testing a web server using a developer/local certificate on local machine.","title":"Check SSL Certificate"},{"location":"ordering/","text":"Launch queries in a specific order In some cases, it will be convenient to run queries not simultaneously, but sequentially, one after another. There are many real cases, for example, first need make authorization and then make several queries as authorized user, to emulate an order in an online store, you first need to add some product to the cart and only then buy it. Basic usage For example, you have two queries - one with the title First and another with the title Second . If we want the First query to be run first, and only after it is finished we run the Second query. We need to open the First query and add a new field with the content order 1 . After that we need to open the Second query and add a new field with the content order 2 . We run multiple queries by pressing Ctrl-m , the progress can be seen in the window footer. Grouping with simultaneous launch inside groups In some cases, you may find it convenient to perform queries not one at a time like this: Query 1 Query 2 Query 3 Query 4 Query 5 Query 6 You can grouping run of queries like this: Query 1 Query 2, Query 3, Query 4 (concurrently) Query 5 Query 6, Query 7 (concurrently) To do this, you need to fill in the order X field as follows: In Query 1 order 1 In Query 2 and Query 3 and Query 4 order 2 (order must be same in all these queries) In Query 5 order 3 In Query 6 and Query 7 order 4 (order must be same in all these queries)","title":"Launch in a specific order"},{"location":"ordering/#launch-queries-in-a-specific-order","text":"In some cases, it will be convenient to run queries not simultaneously, but sequentially, one after another. There are many real cases, for example, first need make authorization and then make several queries as authorized user, to emulate an order in an online store, you first need to add some product to the cart and only then buy it.","title":"Launch queries in a specific order"},{"location":"ordering/#basic-usage","text":"For example, you have two queries - one with the title First and another with the title Second . If we want the First query to be run first, and only after it is finished we run the Second query. We need to open the First query and add a new field with the content order 1 . After that we need to open the Second query and add a new field with the content order 2 . We run multiple queries by pressing Ctrl-m , the progress can be seen in the window footer.","title":"Basic usage"},{"location":"ordering/#grouping-with-simultaneous-launch-inside-groups","text":"In some cases, you may find it convenient to perform queries not one at a time like this: Query 1 Query 2 Query 3 Query 4 Query 5 Query 6 You can grouping run of queries like this: Query 1 Query 2, Query 3, Query 4 (concurrently) Query 5 Query 6, Query 7 (concurrently) To do this, you need to fill in the order X field as follows: In Query 1 order 1 In Query 2 and Query 3 and Query 4 order 2 (order must be same in all these queries) In Query 5 order 3 In Query 6 and Query 7 order 4 (order must be same in all these queries)","title":"Grouping with simultaneous launch inside groups"},{"location":"postscript/","text":"Scripting For scripting in application uses JavaScript language. Post scripting Global objects Post scripts have access to global objects response , result , globals and session . Object response using for get data about result of HTTP request. Object result usings for set of result validation HTTP request. Object globals usings for get access to global variables. The session object can be used to manage shared state between requests when used multiple run. response object headers - array contains all response headers with values in format HeaderName HeaderValue . statusCode - number in range 0-600 from HTTP status code. errorMessage - if the request was in error, this field will contain a description of the error. bodySize - number from header Content-Length (or the actual size of the response body if not specified). route - the final URL with which the request was launched. result object hasErrors (editable) - indicate if some error happened while postsctipr works. errorMessage (editable) - may contain a description of the user's error, which is displayed next to the status code in the results tab. enableError(message) (method) - it sugar for case when you need enable errors and adjust his message as one step. You can replace result.hasErrors = true; result.errorMessage = \"Error result!!!\"; on result.enableError(\"Error result!!!\") . saveToFile(fileName, openAfterSave) (method) - save body from query result as file with path from parameter fileName , if you need open saved file in linked application you can pass true to parameter openAfterSave . globals Object has(name) (method) - if global variable set with name passed via parameter name it will be true in result, in other case false . get(name) (method) - if global variable set with name passed via parameter name it will be value as string in result, in other case empty string. getQueryStatus(unique) (method) - if you have any query with filled field unique you can get info about these query. In result will be or empty object or object with fields hasErrors , errorMessage , status and responseSize . getQueryHeaders(unique) (method) - if you have any query with filled field unique you can get headers from these query. In result will be or empty array or array containing all query headers. session Object shared (member) - this member can be used to store any type of variable (string/number/object/array etc). This member can be useful in cases where we are making multiple requests and need to manage intermediate state between requests. Example: the first request does authorization and stores the username and userid in the session.shared profile, and uses it for checks in subsequent queries. setRemapValue(name, value) (method) - create (and redefine, if a global variable with the same name exists) a session variable. Created/redefined session variables can be used in subsequent requests in the same way as a simple global variable in the format {{ name }} . getRemapValue(name) (method) - get the value from a previously defined variable. Examples Check status code it is equal 200 (OK): postscript result.hasErrors = response.statusCode == 200; Check if the response has a server header: postscript if(!response.headers.find(a => a.indexOf(\"server\"))) { result.hasErrors = true; result.errorMessage = \"Header server not specified!!!\"; } Pre scripting In progress Web socket scripting In progress","title":"Scripting"},{"location":"postscript/#scripting","text":"For scripting in application uses JavaScript language.","title":"Scripting"},{"location":"postscript/#post-scripting","text":"","title":"Post scripting"},{"location":"postscript/#global-objects","text":"Post scripts have access to global objects response , result , globals and session . Object response using for get data about result of HTTP request. Object result usings for set of result validation HTTP request. Object globals usings for get access to global variables. The session object can be used to manage shared state between requests when used multiple run.","title":"Global objects"},{"location":"postscript/#response-object","text":"headers - array contains all response headers with values in format HeaderName HeaderValue . statusCode - number in range 0-600 from HTTP status code. errorMessage - if the request was in error, this field will contain a description of the error. bodySize - number from header Content-Length (or the actual size of the response body if not specified). route - the final URL with which the request was launched.","title":"response object"},{"location":"postscript/#result-object","text":"hasErrors (editable) - indicate if some error happened while postsctipr works. errorMessage (editable) - may contain a description of the user's error, which is displayed next to the status code in the results tab. enableError(message) (method) - it sugar for case when you need enable errors and adjust his message as one step. You can replace result.hasErrors = true; result.errorMessage = \"Error result!!!\"; on result.enableError(\"Error result!!!\") . saveToFile(fileName, openAfterSave) (method) - save body from query result as file with path from parameter fileName , if you need open saved file in linked application you can pass true to parameter openAfterSave .","title":"result object"},{"location":"postscript/#globals-object","text":"has(name) (method) - if global variable set with name passed via parameter name it will be true in result, in other case false . get(name) (method) - if global variable set with name passed via parameter name it will be value as string in result, in other case empty string. getQueryStatus(unique) (method) - if you have any query with filled field unique you can get info about these query. In result will be or empty object or object with fields hasErrors , errorMessage , status and responseSize . getQueryHeaders(unique) (method) - if you have any query with filled field unique you can get headers from these query. In result will be or empty array or array containing all query headers.","title":"globals Object"},{"location":"postscript/#session-object","text":"shared (member) - this member can be used to store any type of variable (string/number/object/array etc). This member can be useful in cases where we are making multiple requests and need to manage intermediate state between requests. Example: the first request does authorization and stores the username and userid in the session.shared profile, and uses it for checks in subsequent queries. setRemapValue(name, value) (method) - create (and redefine, if a global variable with the same name exists) a session variable. Created/redefined session variables can be used in subsequent requests in the same way as a simple global variable in the format {{ name }} . getRemapValue(name) (method) - get the value from a previously defined variable.","title":"session Object"},{"location":"postscript/#examples","text":"Check status code it is equal 200 (OK): postscript result.hasErrors = response.statusCode == 200; Check if the response has a server header: postscript if(!response.headers.find(a => a.indexOf(\"server\"))) { result.hasErrors = true; result.errorMessage = \"Header server not specified!!!\"; }","title":"Examples"},{"location":"postscript/#pre-scripting","text":"In progress","title":"Pre scripting"},{"location":"postscript/#web-socket-scripting","text":"In progress","title":"Web socket scripting"}]}